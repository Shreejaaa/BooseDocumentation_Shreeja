### YamlMime:ManagedReference
items:
- uid: ASE_Shreeja_Test.UnitTest2
  commentId: T:ASE_Shreeja_Test.UnitTest2
  id: UnitTest2
  parent: ASE_Shreeja_Test
  children:
  - ASE_Shreeja_Test.UnitTest2.InvalidDatatype_Throws_StoredProgramException
  - ASE_Shreeja_Test.UnitTest2.Invalid_If
  - ASE_Shreeja_Test.UnitTest2.Invalid_Method
  - ASE_Shreeja_Test.UnitTest2.MissingArraySize_Throws_ParserException
  - ASE_Shreeja_Test.UnitTest2.SetAndGetVal
  - ASE_Shreeja_Test.UnitTest2.SetAndGetVal_Real
  - ASE_Shreeja_Test.UnitTest2.SetAndGetVarName
  - ASE_Shreeja_Test.UnitTest2.SetAndGetVariName_Real
  - ASE_Shreeja_Test.UnitTest2.Setup
  - ASE_Shreeja_Test.UnitTest2.Test_For_Loop_No_Execution_With_Invalid_Start_End
  - ASE_Shreeja_Test.UnitTest2.ValidArray_VariableUpdate
  - ASE_Shreeja_Test.UnitTest2.Valid_For
  - ASE_Shreeja_Test.UnitTest2.Valid_If
  - ASE_Shreeja_Test.UnitTest2.Valid_Method
  - ASE_Shreeja_Test.UnitTest2.Valid_While
  - ASE_Shreeja_Test.UnitTest2.While_Condition_Error
  langs:
  - csharp
  - vb
  name: UnitTest2
  nameWithType: UnitTest2
  fullName: ASE_Shreeja_Test.UnitTest2
  type: Class
  source:
    remote:
      path: ASE Shreeja Test/UnitTest2.cs
      branch: main
      repo: https://github.com/ASE-Classroom/ase-demo-assignment-Shreejaaa.git
    id: UnitTest2
    path: ../ASE Shreeja Test/UnitTest2.cs
    startLine: 11
  assemblies:
  - ASE Shreeja Test
  namespace: ASE_Shreeja_Test
  summary: >-
    Test class for Component 2 functionalities, covering various operations such as integer, real, and array manipulations,

    along with flow control operations like 'if', 'while', 'for', method calls, and exception handling.
  example: []
  syntax:
    content: >-
      [TestClass]

      public class UnitTest2
    content.vb: >-
      <TestClass>

      Public Class UnitTest2
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes:
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute.#ctor
    arguments: []
- uid: ASE_Shreeja_Test.UnitTest2.Setup
  commentId: M:ASE_Shreeja_Test.UnitTest2.Setup
  id: Setup
  parent: ASE_Shreeja_Test.UnitTest2
  langs:
  - csharp
  - vb
  name: Setup()
  nameWithType: UnitTest2.Setup()
  fullName: ASE_Shreeja_Test.UnitTest2.Setup()
  type: Method
  source:
    remote:
      path: ASE Shreeja Test/UnitTest2.cs
      branch: main
      repo: https://github.com/ASE-Classroom/ase-demo-assignment-Shreejaaa.git
    id: Setup
    path: ../ASE Shreeja Test/UnitTest2.cs
    startLine: 21
  assemblies:
  - ASE Shreeja Test
  namespace: ASE_Shreeja_Test
  summary: Initializes the required objects for testing the functionalities.
  example: []
  syntax:
    content: >-
      [TestInitialize]

      public void Setup()
    content.vb: >-
      <TestInitialize>

      Public Sub Setup()
  overload: ASE_Shreeja_Test.UnitTest2.Setup*
  attributes:
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute.#ctor
    arguments: []
- uid: ASE_Shreeja_Test.UnitTest2.SetAndGetVarName
  commentId: M:ASE_Shreeja_Test.UnitTest2.SetAndGetVarName
  id: SetAndGetVarName
  parent: ASE_Shreeja_Test.UnitTest2
  langs:
  - csharp
  - vb
  name: SetAndGetVarName()
  nameWithType: UnitTest2.SetAndGetVarName()
  fullName: ASE_Shreeja_Test.UnitTest2.SetAndGetVarName()
  type: Method
  source:
    remote:
      path: ASE Shreeja Test/UnitTest2.cs
      branch: main
      repo: https://github.com/ASE-Classroom/ase-demo-assignment-Shreejaaa.git
    id: SetAndGetVarName
    path: ../ASE Shreeja Test/UnitTest2.cs
    startLine: 35
  assemblies:
  - ASE Shreeja Test
  namespace: ASE_Shreeja_Test
  summary: >-
    Tests setting and getting the variable name of an integer variable.

    Ensures the variable name is correctly set and retrieved.
  example: []
  syntax:
    content: >-
      [TestMethod]

      public void SetAndGetVarName()
    content.vb: >-
      <TestMethod>

      Public Sub SetAndGetVarName()
  overload: ASE_Shreeja_Test.UnitTest2.SetAndGetVarName*
  attributes:
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute.#ctor
    arguments: []
- uid: ASE_Shreeja_Test.UnitTest2.SetAndGetVal
  commentId: M:ASE_Shreeja_Test.UnitTest2.SetAndGetVal
  id: SetAndGetVal
  parent: ASE_Shreeja_Test.UnitTest2
  langs:
  - csharp
  - vb
  name: SetAndGetVal()
  nameWithType: UnitTest2.SetAndGetVal()
  fullName: ASE_Shreeja_Test.UnitTest2.SetAndGetVal()
  type: Method
  source:
    remote:
      path: ASE Shreeja Test/UnitTest2.cs
      branch: main
      repo: https://github.com/ASE-Classroom/ase-demo-assignment-Shreejaaa.git
    id: SetAndGetVal
    path: ../ASE Shreeja Test/UnitTest2.cs
    startLine: 53
  assemblies:
  - ASE Shreeja Test
  namespace: ASE_Shreeja_Test
  summary: >-
    Tests setting and getting the value of an integer variable.

    Verifies that the value is properly stored and retrieved.
  example: []
  syntax:
    content: >-
      [TestMethod]

      public void SetAndGetVal()
    content.vb: >-
      <TestMethod>

      Public Sub SetAndGetVal()
  overload: ASE_Shreeja_Test.UnitTest2.SetAndGetVal*
  attributes:
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute.#ctor
    arguments: []
- uid: ASE_Shreeja_Test.UnitTest2.SetAndGetVariName_Real
  commentId: M:ASE_Shreeja_Test.UnitTest2.SetAndGetVariName_Real
  id: SetAndGetVariName_Real
  parent: ASE_Shreeja_Test.UnitTest2
  langs:
  - csharp
  - vb
  name: SetAndGetVariName_Real()
  nameWithType: UnitTest2.SetAndGetVariName_Real()
  fullName: ASE_Shreeja_Test.UnitTest2.SetAndGetVariName_Real()
  type: Method
  source:
    remote:
      path: ASE Shreeja Test/UnitTest2.cs
      branch: main
      repo: https://github.com/ASE-Classroom/ase-demo-assignment-Shreejaaa.git
    id: SetAndGetVariName_Real
    path: ../ASE Shreeja Test/UnitTest2.cs
    startLine: 73
  assemblies:
  - ASE Shreeja Test
  namespace: ASE_Shreeja_Test
  summary: >-
    Tests setting and getting the variable name of a real (floating-point) variable.

    Ensures the variable name is correctly set and retrieved.
  example: []
  syntax:
    content: >-
      [TestMethod]

      public void SetAndGetVariName_Real()
    content.vb: >-
      <TestMethod>

      Public Sub SetAndGetVariName_Real()
  overload: ASE_Shreeja_Test.UnitTest2.SetAndGetVariName_Real*
  attributes:
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute.#ctor
    arguments: []
- uid: ASE_Shreeja_Test.UnitTest2.SetAndGetVal_Real
  commentId: M:ASE_Shreeja_Test.UnitTest2.SetAndGetVal_Real
  id: SetAndGetVal_Real
  parent: ASE_Shreeja_Test.UnitTest2
  langs:
  - csharp
  - vb
  name: SetAndGetVal_Real()
  nameWithType: UnitTest2.SetAndGetVal_Real()
  fullName: ASE_Shreeja_Test.UnitTest2.SetAndGetVal_Real()
  type: Method
  source:
    remote:
      path: ASE Shreeja Test/UnitTest2.cs
      branch: main
      repo: https://github.com/ASE-Classroom/ase-demo-assignment-Shreejaaa.git
    id: SetAndGetVal_Real
    path: ../ASE Shreeja Test/UnitTest2.cs
    startLine: 91
  assemblies:
  - ASE Shreeja Test
  namespace: ASE_Shreeja_Test
  summary: >-
    Tests setting and getting the value of a real (floating-point) variable.

    Verifies that the value is properly stored and retrieved.
  example: []
  syntax:
    content: >-
      [TestMethod]

      public void SetAndGetVal_Real()
    content.vb: >-
      <TestMethod>

      Public Sub SetAndGetVal_Real()
  overload: ASE_Shreeja_Test.UnitTest2.SetAndGetVal_Real*
  attributes:
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute.#ctor
    arguments: []
- uid: ASE_Shreeja_Test.UnitTest2.ValidArray_VariableUpdate
  commentId: M:ASE_Shreeja_Test.UnitTest2.ValidArray_VariableUpdate
  id: ValidArray_VariableUpdate
  parent: ASE_Shreeja_Test.UnitTest2
  langs:
  - csharp
  - vb
  name: ValidArray_VariableUpdate()
  nameWithType: UnitTest2.ValidArray_VariableUpdate()
  fullName: ASE_Shreeja_Test.UnitTest2.ValidArray_VariableUpdate()
  type: Method
  source:
    remote:
      path: ASE Shreeja Test/UnitTest2.cs
      branch: main
      repo: https://github.com/ASE-Classroom/ase-demo-assignment-Shreejaaa.git
    id: ValidArray_VariableUpdate
    path: ../ASE Shreeja Test/UnitTest2.cs
    startLine: 111
  assemblies:
  - ASE Shreeja Test
  namespace: ASE_Shreeja_Test
  summary: >-
    Tests a valid array operation by updating a specific index in the array and retrieving its value.

    Ensures correct functionality for array indexing and value assignment.
  example: []
  syntax:
    content: >-
      [TestMethod]

      public void ValidArray_VariableUpdate()
    content.vb: >-
      <TestMethod>

      Public Sub ValidArray_VariableUpdate()
  overload: ASE_Shreeja_Test.UnitTest2.ValidArray_VariableUpdate*
  attributes:
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute.#ctor
    arguments: []
- uid: ASE_Shreeja_Test.UnitTest2.InvalidDatatype_Throws_StoredProgramException
  commentId: M:ASE_Shreeja_Test.UnitTest2.InvalidDatatype_Throws_StoredProgramException
  id: InvalidDatatype_Throws_StoredProgramException
  parent: ASE_Shreeja_Test.UnitTest2
  langs:
  - csharp
  - vb
  name: InvalidDatatype_Throws_StoredProgramException()
  nameWithType: UnitTest2.InvalidDatatype_Throws_StoredProgramException()
  fullName: ASE_Shreeja_Test.UnitTest2.InvalidDatatype_Throws_StoredProgramException()
  type: Method
  source:
    remote:
      path: ASE Shreeja Test/UnitTest2.cs
      branch: main
      repo: https://github.com/ASE-Classroom/ase-demo-assignment-Shreejaaa.git
    id: InvalidDatatype_Throws_StoredProgramException
    path: ../ASE Shreeja Test/UnitTest2.cs
    startLine: 138
  assemblies:
  - ASE Shreeja Test
  namespace: ASE_Shreeja_Test
  summary: >-
    Tests an invalid array operation where an incorrect data type is used.

    Expects a <xref href="BOOSE.StoredProgramException" data-throw-if-not-resolved="false"></xref> to be thrown.
  example: []
  syntax:
    content: >-
      [TestMethod]

      [ExpectedException(typeof(StoredProgramException), "StoredProgram Exception occurred.")]

      public void InvalidDatatype_Throws_StoredProgramException()
    content.vb: >-
      <TestMethod>

      <ExpectedException(GetType(StoredProgramException), "StoredProgram Exception occurred.")>

      Public Sub InvalidDatatype_Throws_StoredProgramException()
  overload: ASE_Shreeja_Test.UnitTest2.InvalidDatatype_Throws_StoredProgramException*
  attributes:
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute.#ctor
    arguments: []
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.ExpectedExceptionAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.ExpectedExceptionAttribute.#ctor(System.Type,System.String)
    arguments:
    - type: System.Type
      value: BOOSE.StoredProgramException
    - type: System.String
      value: StoredProgram Exception occurred.
- uid: ASE_Shreeja_Test.UnitTest2.MissingArraySize_Throws_ParserException
  commentId: M:ASE_Shreeja_Test.UnitTest2.MissingArraySize_Throws_ParserException
  id: MissingArraySize_Throws_ParserException
  parent: ASE_Shreeja_Test.UnitTest2
  langs:
  - csharp
  - vb
  name: MissingArraySize_Throws_ParserException()
  nameWithType: UnitTest2.MissingArraySize_Throws_ParserException()
  fullName: ASE_Shreeja_Test.UnitTest2.MissingArraySize_Throws_ParserException()
  type: Method
  source:
    remote:
      path: ASE Shreeja Test/UnitTest2.cs
      branch: main
      repo: https://github.com/ASE-Classroom/ase-demo-assignment-Shreejaaa.git
    id: MissingArraySize_Throws_ParserException
    path: ../ASE Shreeja Test/UnitTest2.cs
    startLine: 161
  assemblies:
  - ASE Shreeja Test
  namespace: ASE_Shreeja_Test
  summary: Tests the missing array size declaration, expecting a <xref href="BOOSE.ParserException" data-throw-if-not-resolved="false"></xref> to be thrown.
  example: []
  syntax:
    content: >-
      [TestMethod]

      [ExpectedException(typeof(ParserException), "Expected Parser Exception occurred.")]

      public void MissingArraySize_Throws_ParserException()
    content.vb: >-
      <TestMethod>

      <ExpectedException(GetType(ParserException), "Expected Parser Exception occurred.")>

      Public Sub MissingArraySize_Throws_ParserException()
  overload: ASE_Shreeja_Test.UnitTest2.MissingArraySize_Throws_ParserException*
  attributes:
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute.#ctor
    arguments: []
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.ExpectedExceptionAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.ExpectedExceptionAttribute.#ctor(System.Type,System.String)
    arguments:
    - type: System.Type
      value: BOOSE.ParserException
    - type: System.String
      value: Expected Parser Exception occurred.
- uid: ASE_Shreeja_Test.UnitTest2.Valid_If
  commentId: M:ASE_Shreeja_Test.UnitTest2.Valid_If
  id: Valid_If
  parent: ASE_Shreeja_Test.UnitTest2
  langs:
  - csharp
  - vb
  name: Valid_If()
  nameWithType: UnitTest2.Valid_If()
  fullName: ASE_Shreeja_Test.UnitTest2.Valid_If()
  type: Method
  source:
    remote:
      path: ASE Shreeja Test/UnitTest2.cs
      branch: main
      repo: https://github.com/ASE-Classroom/ase-demo-assignment-Shreejaaa.git
    id: Valid_If
    path: ../ASE Shreeja Test/UnitTest2.cs
    startLine: 185
  assemblies:
  - ASE Shreeja Test
  namespace: ASE_Shreeja_Test
  summary: >-
    Tests a valid 'if' operation where the condition is met.

    Verifies that the correct block is executed when the condition is true.
  example: []
  syntax:
    content: >-
      [TestMethod]

      public void Valid_If()
    content.vb: >-
      <TestMethod>

      Public Sub Valid_If()
  overload: ASE_Shreeja_Test.UnitTest2.Valid_If*
  attributes:
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute.#ctor
    arguments: []
- uid: ASE_Shreeja_Test.UnitTest2.Invalid_If
  commentId: M:ASE_Shreeja_Test.UnitTest2.Invalid_If
  id: Invalid_If
  parent: ASE_Shreeja_Test.UnitTest2
  langs:
  - csharp
  - vb
  name: Invalid_If()
  nameWithType: UnitTest2.Invalid_If()
  fullName: ASE_Shreeja_Test.UnitTest2.Invalid_If()
  type: Method
  source:
    remote:
      path: ASE Shreeja Test/UnitTest2.cs
      branch: main
      repo: https://github.com/ASE-Classroom/ase-demo-assignment-Shreejaaa.git
    id: Invalid_If
    path: ../ASE Shreeja Test/UnitTest2.cs
    startLine: 212
  assemblies:
  - ASE Shreeja Test
  namespace: ASE_Shreeja_Test
  summary: >-
    Tests an invalid 'if' operation where the condition is not met.

    Verifies that the correct block is executed when the condition is false.
  example: []
  syntax:
    content: >-
      [TestMethod]

      public void Invalid_If()
    content.vb: >-
      <TestMethod>

      Public Sub Invalid_If()
  overload: ASE_Shreeja_Test.UnitTest2.Invalid_If*
  attributes:
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute.#ctor
    arguments: []
- uid: ASE_Shreeja_Test.UnitTest2.Valid_While
  commentId: M:ASE_Shreeja_Test.UnitTest2.Valid_While
  id: Valid_While
  parent: ASE_Shreeja_Test.UnitTest2
  langs:
  - csharp
  - vb
  name: Valid_While()
  nameWithType: UnitTest2.Valid_While()
  fullName: ASE_Shreeja_Test.UnitTest2.Valid_While()
  type: Method
  source:
    remote:
      path: ASE Shreeja Test/UnitTest2.cs
      branch: main
      repo: https://github.com/ASE-Classroom/ase-demo-assignment-Shreejaaa.git
    id: Valid_While
    path: ../ASE Shreeja Test/UnitTest2.cs
    startLine: 239
  assemblies:
  - ASE Shreeja Test
  namespace: ASE_Shreeja_Test
  summary: >-
    Tests a valid 'while' operation where the condition is met.

    Verifies that the loop executes correctly while the condition holds.
  example: []
  syntax:
    content: >-
      [TestMethod]

      public void Valid_While()
    content.vb: >-
      <TestMethod>

      Public Sub Valid_While()
  overload: ASE_Shreeja_Test.UnitTest2.Valid_While*
  attributes:
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute.#ctor
    arguments: []
- uid: ASE_Shreeja_Test.UnitTest2.While_Condition_Error
  commentId: M:ASE_Shreeja_Test.UnitTest2.While_Condition_Error
  id: While_Condition_Error
  parent: ASE_Shreeja_Test.UnitTest2
  langs:
  - csharp
  - vb
  name: While_Condition_Error()
  nameWithType: UnitTest2.While_Condition_Error()
  fullName: ASE_Shreeja_Test.UnitTest2.While_Condition_Error()
  type: Method
  source:
    remote:
      path: ASE Shreeja Test/UnitTest2.cs
      branch: main
      repo: https://github.com/ASE-Classroom/ase-demo-assignment-Shreejaaa.git
    id: While_Condition_Error
    path: ../ASE Shreeja Test/UnitTest2.cs
    startLine: 265
  assemblies:
  - ASE Shreeja Test
  namespace: ASE_Shreeja_Test
  summary: >-
    Tests a 'while' operation where the condition is not met initially.

    Ensures that the loop does not execute when the condition is false.
  example: []
  syntax:
    content: >-
      [TestMethod]

      public void While_Condition_Error()
    content.vb: >-
      <TestMethod>

      Public Sub While_Condition_Error()
  overload: ASE_Shreeja_Test.UnitTest2.While_Condition_Error*
  attributes:
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute.#ctor
    arguments: []
- uid: ASE_Shreeja_Test.UnitTest2.Valid_For
  commentId: M:ASE_Shreeja_Test.UnitTest2.Valid_For
  id: Valid_For
  parent: ASE_Shreeja_Test.UnitTest2
  langs:
  - csharp
  - vb
  name: Valid_For()
  nameWithType: UnitTest2.Valid_For()
  fullName: ASE_Shreeja_Test.UnitTest2.Valid_For()
  type: Method
  source:
    remote:
      path: ASE Shreeja Test/UnitTest2.cs
      branch: main
      repo: https://github.com/ASE-Classroom/ase-demo-assignment-Shreejaaa.git
    id: Valid_For
    path: ../ASE Shreeja Test/UnitTest2.cs
    startLine: 290
  assemblies:
  - ASE Shreeja Test
  namespace: ASE_Shreeja_Test
  summary: Tests a valid 'for' loop operation where the loop executes correctly based on given conditions.
  example: []
  syntax:
    content: >-
      [TestMethod]

      public void Valid_For()
    content.vb: >-
      <TestMethod>

      Public Sub Valid_For()
  overload: ASE_Shreeja_Test.UnitTest2.Valid_For*
  attributes:
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute.#ctor
    arguments: []
- uid: ASE_Shreeja_Test.UnitTest2.Test_For_Loop_No_Execution_With_Invalid_Start_End
  commentId: M:ASE_Shreeja_Test.UnitTest2.Test_For_Loop_No_Execution_With_Invalid_Start_End
  id: Test_For_Loop_No_Execution_With_Invalid_Start_End
  parent: ASE_Shreeja_Test.UnitTest2
  langs:
  - csharp
  - vb
  name: Test_For_Loop_No_Execution_With_Invalid_Start_End()
  nameWithType: UnitTest2.Test_For_Loop_No_Execution_With_Invalid_Start_End()
  fullName: ASE_Shreeja_Test.UnitTest2.Test_For_Loop_No_Execution_With_Invalid_Start_End()
  type: Method
  source:
    remote:
      path: ASE Shreeja Test/UnitTest2.cs
      branch: main
      repo: https://github.com/ASE-Classroom/ase-demo-assignment-Shreejaaa.git
    id: Test_For_Loop_No_Execution_With_Invalid_Start_End
    path: ../ASE Shreeja Test/UnitTest2.cs
    startLine: 315
  assemblies:
  - ASE Shreeja Test
  namespace: ASE_Shreeja_Test
  summary: >-
    Tests an invalid 'for' loop operation where the start and end conditions lead to no loop execution.

    Expects a <xref href="BOOSE.StoredProgramException" data-throw-if-not-resolved="false"></xref> for an infinite loop.
  example: []
  syntax:
    content: >-
      [ExpectedException(typeof(StoredProgramException), "Infinite loop.")]

      [TestMethod]

      public void Test_For_Loop_No_Execution_With_Invalid_Start_End()
    content.vb: >-
      <ExpectedException(GetType(StoredProgramException), "Infinite loop.")>

      <TestMethod>

      Public Sub Test_For_Loop_No_Execution_With_Invalid_Start_End()
  overload: ASE_Shreeja_Test.UnitTest2.Test_For_Loop_No_Execution_With_Invalid_Start_End*
  attributes:
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.ExpectedExceptionAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.ExpectedExceptionAttribute.#ctor(System.Type,System.String)
    arguments:
    - type: System.Type
      value: BOOSE.StoredProgramException
    - type: System.String
      value: Infinite loop.
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute.#ctor
    arguments: []
- uid: ASE_Shreeja_Test.UnitTest2.Valid_Method
  commentId: M:ASE_Shreeja_Test.UnitTest2.Valid_Method
  id: Valid_Method
  parent: ASE_Shreeja_Test.UnitTest2
  langs:
  - csharp
  - vb
  name: Valid_Method()
  nameWithType: UnitTest2.Valid_Method()
  fullName: ASE_Shreeja_Test.UnitTest2.Valid_Method()
  type: Method
  source:
    remote:
      path: ASE Shreeja Test/UnitTest2.cs
      branch: main
      repo: https://github.com/ASE-Classroom/ase-demo-assignment-Shreejaaa.git
    id: Valid_Method
    path: ../ASE Shreeja Test/UnitTest2.cs
    startLine: 339
  assemblies:
  - ASE Shreeja Test
  namespace: ASE_Shreeja_Test
  summary: >-
    Tests a valid method operation where the method performs a simple calculation.

    Verifies correct method execution and result.
  example: []
  syntax:
    content: >-
      [TestMethod]

      public void Valid_Method()
    content.vb: >-
      <TestMethod>

      Public Sub Valid_Method()
  overload: ASE_Shreeja_Test.UnitTest2.Valid_Method*
  attributes:
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute.#ctor
    arguments: []
- uid: ASE_Shreeja_Test.UnitTest2.Invalid_Method
  commentId: M:ASE_Shreeja_Test.UnitTest2.Invalid_Method
  id: Invalid_Method
  parent: ASE_Shreeja_Test.UnitTest2
  langs:
  - csharp
  - vb
  name: Invalid_Method()
  nameWithType: UnitTest2.Invalid_Method()
  fullName: ASE_Shreeja_Test.UnitTest2.Invalid_Method()
  type: Method
  source:
    remote:
      path: ASE Shreeja Test/UnitTest2.cs
      branch: main
      repo: https://github.com/ASE-Classroom/ase-demo-assignment-Shreejaaa.git
    id: Invalid_Method
    path: ../ASE Shreeja Test/UnitTest2.cs
    startLine: 365
  assemblies:
  - ASE Shreeja Test
  namespace: ASE_Shreeja_Test
  summary: >-
    Tests an invalid method operation where the method call has insufficient parameters.

    Expects a <xref href="BOOSE.StoredProgramException" data-throw-if-not-resolved="false"></xref> due to incorrect method call.
  example: []
  syntax:
    content: >-
      [ExpectedException(typeof(StoredProgramException), "")]

      [TestMethod]

      public void Invalid_Method()
    content.vb: >-
      <ExpectedException(GetType(StoredProgramException), "")>

      <TestMethod>

      Public Sub Invalid_Method()
  overload: ASE_Shreeja_Test.UnitTest2.Invalid_Method*
  attributes:
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.ExpectedExceptionAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.ExpectedExceptionAttribute.#ctor(System.Type,System.String)
    arguments:
    - type: System.Type
      value: BOOSE.StoredProgramException
    - type: System.String
      value: ''
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute.#ctor
    arguments: []
references:
- uid: ASE_Shreeja_Test
  commentId: N:ASE_Shreeja_Test
  href: ASE_Shreeja_Test.html
  name: ASE_Shreeja_Test
  nameWithType: ASE_Shreeja_Test
  fullName: ASE_Shreeja_Test
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: ASE_Shreeja_Test.UnitTest2.Setup*
  commentId: Overload:ASE_Shreeja_Test.UnitTest2.Setup
  href: ASE_Shreeja_Test.UnitTest2.html#ASE_Shreeja_Test_UnitTest2_Setup
  name: Setup
  nameWithType: UnitTest2.Setup
  fullName: ASE_Shreeja_Test.UnitTest2.Setup
- uid: ASE_Shreeja_Test.UnitTest2.SetAndGetVarName*
  commentId: Overload:ASE_Shreeja_Test.UnitTest2.SetAndGetVarName
  href: ASE_Shreeja_Test.UnitTest2.html#ASE_Shreeja_Test_UnitTest2_SetAndGetVarName
  name: SetAndGetVarName
  nameWithType: UnitTest2.SetAndGetVarName
  fullName: ASE_Shreeja_Test.UnitTest2.SetAndGetVarName
- uid: ASE_Shreeja_Test.UnitTest2.SetAndGetVal*
  commentId: Overload:ASE_Shreeja_Test.UnitTest2.SetAndGetVal
  href: ASE_Shreeja_Test.UnitTest2.html#ASE_Shreeja_Test_UnitTest2_SetAndGetVal
  name: SetAndGetVal
  nameWithType: UnitTest2.SetAndGetVal
  fullName: ASE_Shreeja_Test.UnitTest2.SetAndGetVal
- uid: ASE_Shreeja_Test.UnitTest2.SetAndGetVariName_Real*
  commentId: Overload:ASE_Shreeja_Test.UnitTest2.SetAndGetVariName_Real
  href: ASE_Shreeja_Test.UnitTest2.html#ASE_Shreeja_Test_UnitTest2_SetAndGetVariName_Real
  name: SetAndGetVariName_Real
  nameWithType: UnitTest2.SetAndGetVariName_Real
  fullName: ASE_Shreeja_Test.UnitTest2.SetAndGetVariName_Real
- uid: ASE_Shreeja_Test.UnitTest2.SetAndGetVal_Real*
  commentId: Overload:ASE_Shreeja_Test.UnitTest2.SetAndGetVal_Real
  href: ASE_Shreeja_Test.UnitTest2.html#ASE_Shreeja_Test_UnitTest2_SetAndGetVal_Real
  name: SetAndGetVal_Real
  nameWithType: UnitTest2.SetAndGetVal_Real
  fullName: ASE_Shreeja_Test.UnitTest2.SetAndGetVal_Real
- uid: ASE_Shreeja_Test.UnitTest2.ValidArray_VariableUpdate*
  commentId: Overload:ASE_Shreeja_Test.UnitTest2.ValidArray_VariableUpdate
  href: ASE_Shreeja_Test.UnitTest2.html#ASE_Shreeja_Test_UnitTest2_ValidArray_VariableUpdate
  name: ValidArray_VariableUpdate
  nameWithType: UnitTest2.ValidArray_VariableUpdate
  fullName: ASE_Shreeja_Test.UnitTest2.ValidArray_VariableUpdate
- uid: BOOSE.StoredProgramException
  commentId: T:BOOSE.StoredProgramException
  parent: BOOSE
  isExternal: true
  name: StoredProgramException
  nameWithType: StoredProgramException
  fullName: BOOSE.StoredProgramException
- uid: ASE_Shreeja_Test.UnitTest2.InvalidDatatype_Throws_StoredProgramException*
  commentId: Overload:ASE_Shreeja_Test.UnitTest2.InvalidDatatype_Throws_StoredProgramException
  href: ASE_Shreeja_Test.UnitTest2.html#ASE_Shreeja_Test_UnitTest2_InvalidDatatype_Throws_StoredProgramException
  name: InvalidDatatype_Throws_StoredProgramException
  nameWithType: UnitTest2.InvalidDatatype_Throws_StoredProgramException
  fullName: ASE_Shreeja_Test.UnitTest2.InvalidDatatype_Throws_StoredProgramException
- uid: BOOSE
  commentId: N:BOOSE
  isExternal: true
  name: BOOSE
  nameWithType: BOOSE
  fullName: BOOSE
- uid: BOOSE.ParserException
  commentId: T:BOOSE.ParserException
  parent: BOOSE
  isExternal: true
  name: ParserException
  nameWithType: ParserException
  fullName: BOOSE.ParserException
- uid: ASE_Shreeja_Test.UnitTest2.MissingArraySize_Throws_ParserException*
  commentId: Overload:ASE_Shreeja_Test.UnitTest2.MissingArraySize_Throws_ParserException
  href: ASE_Shreeja_Test.UnitTest2.html#ASE_Shreeja_Test_UnitTest2_MissingArraySize_Throws_ParserException
  name: MissingArraySize_Throws_ParserException
  nameWithType: UnitTest2.MissingArraySize_Throws_ParserException
  fullName: ASE_Shreeja_Test.UnitTest2.MissingArraySize_Throws_ParserException
- uid: ASE_Shreeja_Test.UnitTest2.Valid_If*
  commentId: Overload:ASE_Shreeja_Test.UnitTest2.Valid_If
  href: ASE_Shreeja_Test.UnitTest2.html#ASE_Shreeja_Test_UnitTest2_Valid_If
  name: Valid_If
  nameWithType: UnitTest2.Valid_If
  fullName: ASE_Shreeja_Test.UnitTest2.Valid_If
- uid: ASE_Shreeja_Test.UnitTest2.Invalid_If*
  commentId: Overload:ASE_Shreeja_Test.UnitTest2.Invalid_If
  href: ASE_Shreeja_Test.UnitTest2.html#ASE_Shreeja_Test_UnitTest2_Invalid_If
  name: Invalid_If
  nameWithType: UnitTest2.Invalid_If
  fullName: ASE_Shreeja_Test.UnitTest2.Invalid_If
- uid: ASE_Shreeja_Test.UnitTest2.Valid_While*
  commentId: Overload:ASE_Shreeja_Test.UnitTest2.Valid_While
  href: ASE_Shreeja_Test.UnitTest2.html#ASE_Shreeja_Test_UnitTest2_Valid_While
  name: Valid_While
  nameWithType: UnitTest2.Valid_While
  fullName: ASE_Shreeja_Test.UnitTest2.Valid_While
- uid: ASE_Shreeja_Test.UnitTest2.While_Condition_Error*
  commentId: Overload:ASE_Shreeja_Test.UnitTest2.While_Condition_Error
  href: ASE_Shreeja_Test.UnitTest2.html#ASE_Shreeja_Test_UnitTest2_While_Condition_Error
  name: While_Condition_Error
  nameWithType: UnitTest2.While_Condition_Error
  fullName: ASE_Shreeja_Test.UnitTest2.While_Condition_Error
- uid: ASE_Shreeja_Test.UnitTest2.Valid_For*
  commentId: Overload:ASE_Shreeja_Test.UnitTest2.Valid_For
  href: ASE_Shreeja_Test.UnitTest2.html#ASE_Shreeja_Test_UnitTest2_Valid_For
  name: Valid_For
  nameWithType: UnitTest2.Valid_For
  fullName: ASE_Shreeja_Test.UnitTest2.Valid_For
- uid: ASE_Shreeja_Test.UnitTest2.Test_For_Loop_No_Execution_With_Invalid_Start_End*
  commentId: Overload:ASE_Shreeja_Test.UnitTest2.Test_For_Loop_No_Execution_With_Invalid_Start_End
  href: ASE_Shreeja_Test.UnitTest2.html#ASE_Shreeja_Test_UnitTest2_Test_For_Loop_No_Execution_With_Invalid_Start_End
  name: Test_For_Loop_No_Execution_With_Invalid_Start_End
  nameWithType: UnitTest2.Test_For_Loop_No_Execution_With_Invalid_Start_End
  fullName: ASE_Shreeja_Test.UnitTest2.Test_For_Loop_No_Execution_With_Invalid_Start_End
- uid: ASE_Shreeja_Test.UnitTest2.Valid_Method*
  commentId: Overload:ASE_Shreeja_Test.UnitTest2.Valid_Method
  href: ASE_Shreeja_Test.UnitTest2.html#ASE_Shreeja_Test_UnitTest2_Valid_Method
  name: Valid_Method
  nameWithType: UnitTest2.Valid_Method
  fullName: ASE_Shreeja_Test.UnitTest2.Valid_Method
- uid: ASE_Shreeja_Test.UnitTest2.Invalid_Method*
  commentId: Overload:ASE_Shreeja_Test.UnitTest2.Invalid_Method
  href: ASE_Shreeja_Test.UnitTest2.html#ASE_Shreeja_Test_UnitTest2_Invalid_Method
  name: Invalid_Method
  nameWithType: UnitTest2.Invalid_Method
  fullName: ASE_Shreeja_Test.UnitTest2.Invalid_Method
